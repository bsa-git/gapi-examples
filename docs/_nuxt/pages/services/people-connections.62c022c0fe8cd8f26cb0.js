webpackJsonp([5],{"9B9w":function(e,t,n){"use strict";var i=n("Dd8w"),o=n.n(i),s=n("Xxa5"),c=n.n(s),a=n("exGp"),l=n.n(a),r=n("NYxO"),p=n("WSyU");t.a={data:function(){return{title:"Method: people.connections.list",description:"Provides a list of the authenticated user's contacts",apiGoogle:null,isSignedIn:!1,myConnections:[]}},head:function(){return{title:this.title,meta:[{hid:"description",name:"description",content:this.description}]}},fetch:function(){function e(e){return t.apply(this,arguments)}var t=l()(c.a.mark(function e(t){var n=(t.store,t.isClient),i=t.config;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:i.debug&&n&&console.log("people-connections.fetch - OK.");case 1:case"end":return e.stop()}},e,this)}));return e}(),created:function(){var e={debug:this.config.debug,apiKey:this.config.gapi.apiKey,clientId:this.config.gapi.clientId,discoveryDocs:this.config.gapi.services.people.discoveryDocs,scope:this.config.gapi.services.people.scopes.connections};this.apiGoogle=new p.a(e),this.config.debug&&console.log("people-connections.created - OK")},beforeDestroy:function(){this.config.debug&&console.log("people-connections.beforeDestroy - OK")},mounted:function(){this.$nextTick(function(){var e=this;this.apiGoogle.loadGoogleAPI().then(function(){return e.config.debug&&console.log("loadGoogleAPI - OK"),e.apiGoogle.init()}).then(function(){e.config.debug&&console.log("apiGoogle.init - OK");var t=e.updateSigninStatus.bind(e);e.apiGoogle.listenSignedIn(t),e.updateSigninStatus(e.apiGoogle.isSignedIn())})})},computed:o()({},Object(r.mapGetters)({config:"getConfig",gapi:"getGapi"})),methods:{updateSigninStatus:function(e){this.config.debug&&console.log("updateSigninStatus - OK: ","isSignedIn="+e+"; "),this.isSignedIn=e,e&&this.$store.dispatch("receivePeopleMyConnections")}}}},TVN9:function(e,t,n){"use strict";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("div",{staticClass:"text-center"},[n("h2",[e._v(e._s(e.title))]),n("p",{staticClass:"lead"},[e._v(e._s(e.description))])]),e._m(0),n("div",{staticClass:"jumbotron"},[n("div",{attrs:{"text-center":""}},[e.isSignedIn?n("button",{staticClass:"btn btn-primary",attrs:{type:"button"},on:{click:e.apiGoogle.handleSignoutClick}},[e._v("Sign Out")]):n("button",{staticClass:"btn btn-primary",attrs:{type:"button"},on:{click:e.apiGoogle.handleAuthClick}},[e._v("Authorize")])]),e.isSignedIn?n("div",{staticClass:"lead",attrs:{id:"content"}},[n("p",{staticClass:"lead"},[e._v("Connections:")]),n("ul",e._l(e.gapi.people_my.connections,function(t){return n("li",[e._v(e._s(t))])}))]):e._e()])])},o=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bs-callout-info bs-callout"},[n("h4",[e._v("Method: people.connections.list")]),n("p",[e._v("\n      Provides a list of the authenticated user's contacts merged with any connected profiles.\n      The request throws a 400 error if 'personFields' is not specified.\n    ")]),n("strong",[e._v("HTTP request")]),n("p",[n("code",[e._v("GET https://people.googleapis.com/v1/{resourceName=people/*}/connections")])]),n("p",[e._v("The URL uses "),n("a",{attrs:{href:"https://github.com/googleapis/googleapis/blob/master/google/api/http.proto",target:"_blank"}},[e._v("Google API HTTP annotation")]),e._v(" syntax.")]),n("p",{staticClass:"lead"},[e._v("Details can be found "),n("a",{attrs:{href:"https://developers.google.com/people/api/rest/v1/people.connections/list",target:"_blank"}},[e._v("here")]),e._v(".")])])}],s={render:i,staticRenderFns:o};t.a=s},gb4K:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n("9B9w"),o=n("TVN9"),s=n("VU/8"),c=s(i.a,o.a,null,null,null);t.default=c.exports}});
//# sourceMappingURL=people-connections.62c022c0fe8cd8f26cb0.js.map